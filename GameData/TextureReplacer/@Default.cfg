// DON'T USE TABS IN THIS FILE! Unity fails to parse lines that contain tabs.

// IF YOU ARE A MODDER don't distribute this file with your mod. Create a new
// file `MyMod.cfg` that has the same structure as this one but only containing
// options you wish to override.

TextureReplacer
{
  // When to enable texture compression.
  // Possible options: `always`, `never` and `auto`. Auto means it is enabled
  // unless Active Texture Management mod is detected.
  isCompressionEnabled = auto

  // Generate mipmaps for PNGs and JPEGs in certain directories (specified in
  // the next option) to a fix KSP bug that doesn't generate mipmaps for these
  // images and makes them look ugly under high angles.
  // Possible options: `always`, `never` and `auto`. Auto means it is enabled
  // unless Active Texture Management mod is detected.
  isMipmapGenEnabled = always

  // List of regular expressions that trigger mipmap generation when matching
  // the path of a texture that is missing mipmaps. These should cover all model
  // textures but not UI icons. The strings are case-sensitive on all platforms.
  // The list must be space- and/or comma-separated and in one line.
  generateMipmaps = /FX/ /Parts/ /Spaces/ ^TextureReplacer/ ^KAS/ ^Engineer/ ^FASA/ ^ASET/ ^FusTek/

  // Prevent unloading for textures whose paths are matching the following
  // regular expressions.
  // The list must be space- and/or comma-separated and in one line.
  keepReadable = MFD ^BoulderCo/Clouds/ ^Romfarer/textures/ ^WarpPlugin/

  // Replace helmet visor shader to support reflections (EVA only).
  isVisorReflectionEnabled = true

  // Reflection colour. Reflection is multiplied by this RGB colour before it is
  // added to the visor colour.
  visorReflectionColour = 1 1 1

  // Spawn a Kerbal on EVA in his/her IVA suit without helmet and jetpack when
  // in breathable atmosphere (oxygen + sufficent pressure).
  isAtmSuitEnabled = true

  // Minimum air pressure required for a Kerbal to spawn in his/her IVA suit.
  atmSuitPressure = 0.5

  CustomKerbals
  {
    // Custom heads and suits for specific Kerbals. Entries are of the form:
    //
    //   Name = headTex [suitDir]
    //
    // where `headTex` is an image (without extension) inside `Heads/` and
    // `suitDir` is a subdirectory inside `Suits/` containing textures for a
    // suit. `DEFAULT` keeps the default head/suit textures from `Default/` and
    // `GENERIC` assigns a generic head/suit using the same rules as for the
    // generic Kerbals. If `suitDir` is missing then `GENERIC` is assumed.
    //
    // Examples:
    //
    //   Huey Kerman    = head1 Suit1
    //   Dewey Kerman   = head2 DEFAULT
    //   Louie Kerman   = head3
    //   Donald Kerman  = DEFAULT DEFAULT
    //   Daisy Kerman   = DEFAULT
    //   Scrooge Kerman = GENERIC Suit2
    //
  }

  GenericKerbals
  {
    // Prevent the following heads from being assigned to generic Kerbals.
    // The list must be space- and/or comma-separated and in one line.
    excludedHeads =

    // Prevent the following suits from being assigned to generic Kerbals.
    // The list must be space- and/or comma-separated and in one line.
    excludedSuits =

    // Female heads. Those will only be paired with female suits.
    // The list must be space- and/or comma-separated and in one line.
    femaleHeads =

    // Female suits. Those will only be paired with female heads.
    // The list must be space- and/or comma-separated and in one line.
    femaleSuits =

    // Eye-less heads. Eyes will be hidden for those heads, so one can paint
    // custom ones on the head texture.
    // The list must be space- and/or comma-separated and in one line.
    eyelessHeads =

    // Whether generic suits should be assigned pseudo-randomly based on a
    // Kerbal's name's hash or consecutively based on a Kerbal's position in
    // the global roster.
    // Possible options: `random` or `consecutive`.
    suitAssignment = random
  }

  CabinSuits
  {
    // Cabin-specific suits. These are enforced even if a Kerbal has a custom
    // suit. Entries are of the form:
    //
    //   partName = suitDir
    //
    // where `partName` is the name of a part (`name = ...` in `part.cfg`) and
    // `suitDir` is either a suit directory from `Suits/` or `DEFAULT`.
    //
    // Examples:
    //
    //   Mark1Cockpit = PilotSuit
    //   crewCabin = DEFAULT
    //
  }
}
